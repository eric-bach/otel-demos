AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: ebgamez - e-commerce backend with serverless microservices

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs20.x
    Architectures:
      - arm64
    Environment:
      Variables:
        PRODUCTS_TABLE: !Ref ProductsTable
        ORDERS_TABLE: !Ref OrdersTable
        INVOICES_TABLE: !Ref InvoicesTable
        PAYMENTS_TABLE: !Ref PaymentsTable
        FULFILLMENTS_TABLE: !Ref FulfillmentsTable
        AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-handler
    Layers:
      - arn:aws:lambda:us-west-2:901920570463:layer:aws-otel-nodejs-arm64-ver-1-18-1:4
    Tracing: Active

Resources:
  # API Gateway
  EcommerceApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  # S3 Procut Images Bucket
  ProductImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ebgamez-product-images
      RemovalPolicy: Delete

  # DynamoDB Tables
  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Products
      AttributeDefinitions:
        - AttributeName: productId
          AttributeType: S
      KeySchema:
        - AttributeName: productId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Orders
      AttributeDefinitions:
        - AttributeName: orderId
          AttributeType: S
      KeySchema:
        - AttributeName: orderId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  InvoicesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Invoices
      AttributeDefinitions:
        - AttributeName: invoiceId
          AttributeType: S
      KeySchema:
        - AttributeName: invoiceId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  PaymentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Payments
      AttributeDefinitions:
        - AttributeName: paymentId
          AttributeType: S
      KeySchema:
        - AttributeName: paymentId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  FulfillmentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Fulfillments
      AttributeDefinitions:
        - AttributeName: fulfillmentId
          AttributeType: S
      KeySchema:
        - AttributeName: fulfillmentId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # Lambda Functions
  ProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/product
      Handler: src/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        GetProducts:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /products
            Method: GET
        GetProduct:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /products/{productId}
            Method: GET
        CreateProduct:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /products
            Method: POST
        UpdateProduct:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /products/{productId}
            Method: PUT
        DeleteProduct:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /products/{productId}
            Method: DELETE

  OrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/order
      Handler: src/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OrdersTable
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: products-service
          POWERTOOLS_METRICS_NAMESPACE: ecommerce-app
      Events:
        CreateOrder:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /orders
            Method: POST
        GetOrder:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /orders/{orderId}
            Method: GET
        UpdateOrder:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /orders/{orderId}
            Method: PUT

  InvoicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/invoice
      Handler: src/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref InvoicesTable
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: products-service
          POWERTOOLS_METRICS_NAMESPACE: ecommerce-app
      Events:
        GetInvoice:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /invoices/{invoiceId}
            Method: GET
        CreateInvoice:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /invoices
            Method: POST

  PaymentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/payment
      Handler: src/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PaymentsTable
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: products-service
          POWERTOOLS_METRICS_NAMESPACE: ecommerce-app
      Events:
        ProcessPayment:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /payments
            Method: POST
        GetPayment:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /payments/{paymentId}
            Method: GET

  FulfillmentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/fulfillment
      Handler: src/app.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FulfillmentsTable
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: products-service
          POWERTOOLS_METRICS_NAMESPACE: ecommerce-app
      Events:
        CreateFulfillment:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /fulfillment
            Method: POST
        GetFulfillment:
          Type: Api
          Properties:
            RestApiId: !Ref EcommerceApi
            Path: /fulfillment/{fulfillmentId}
            Method: GET

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub https://${EcommerceApi}.execute-api.${AWS::Region}.amazonaws.com/prod/
  ProductImagesBucketName:
    Description: Name of the Product Images Bucket
    Value: !Ref ProductImagesBucket
  ProductsTableName:
    Description: Name of the Products DynamoDB table
    Value: !Ref ProductsTable
